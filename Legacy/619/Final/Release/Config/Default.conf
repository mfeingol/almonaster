////////////////////////////////////////////////////////////////////
// These are the standard settings that each pagesource must have //
////////////////////////////////////////////////////////////////////

//
// File to be used for 401 Not Authorized errors
//
401File=Errors/401.html

//
// File to be used for 403 Forbidden errors
//
403File=Errors/403.html

//
// File to be used for 404 Not Found errors
//
404File=Errors/404.html

//
// File to be used for 404 Not Found errors
//
500File=Errors/500.html

//
// File to be used for 404 Not Found errors
//
501File=Errors/501.html

//
// Override 401 Not Authorized errors
// 0 = no
// 1 = yes
//
Override401=0

//
// Override 403 Forbidden errors
// 0 = no
// 1 = yes
//
Override403=0

//
// Override 404 Not Found errors
// 0 = no
// 1 = yes
//
Override404=0

//
// Override IP address access denied errors
// 0 = no
// 1 = yes
//
OverrideIPAddressDeniedAccess=1

//
// Override User Agent access denied errors
// 0 = no
// 1 = yes
//
OverrideUserAgentDeniedAccess=1

//
// Allow directory browsing
// 0 = no
// 1 = yes
//
AllowDirectoryBrowsing=1

//
// Base path of pagesource's virtual directory
//
BasePath=Www_root/Almonaster

//
// Use a default file when a directory name is requested
// 0 = no
// 1 = yes
//
UseDefaultFile=0

//
// Default file to be used
//
DefaultFile=index.html

//
// Use the pagesource logic implemented in the dll
// 0 = no
// 1 = yes
//
UsePageSourceLibrary=1

//
// Name of the dll in which the pagesource is implemented
//
PageSourceLibrary=Almonaster.dll

//
// Uuid used to identify the class used to implement the pagesource
//
PageSourceClsid=8B631302-8CFA-11d3-A240-0050047FE2E2

//
// Override GET requests
// 0 = no
// 1 = yes
//
OverrideGet=1

//
// Override POST requests
// 0 = no
// 1 = yes
//
OverridePost=1

//
// Use basic authentication for access to pagesource resources
// 0 = no
// 1 = yes
//
UseBasicAuthentication=0

//
// Log requests for pagesource resources to a log file
// 0 = no
// 1 = yes
//
UseLogging=1

//
// Use the international standard for Httpd log files
// 0 = no (use Alajar format)
// 1 = yes
//
UseCommonLogFormat=0

//
// Use Server Side Includes on all text/html responses
// (Not available in current Alajar builds)
// 0 = no
// 1 = yes
//
UseSSI=0

//
// Threading model for the page source, ignored if no page source library is used
//
// Free = Multiple threads can call into the page source simultaneously
// Single = Only one thread can call into the page source at a time
//
Threading=Free

//
// Deny access to the following IP addresses, separated by @'s
// Wildcards can be used in place of a number, but no numbers should follow a wildcard
// If this parameter is left blank, no access denial will take place
//
DenyIPAddressAccess=

//
// If this parameter is used, access is only allowed to the IP addresses listed here,
// and the DenyAccess parameter will be ignored
//
OnlyAllowIPAddressAccess=

//
// Deny access to the following browsers, separated by @'s
// Wildcards can be used in place of strings, but nothing should follow the wildcards
// If this parameter is left blank, no access denial will take place
//
DenyUserAgentAccess=

//
// If this parameter is used, access is only allowed to the browsers listed here,
// and the DenyAccess parameter will be ignored
//
OnlyAllowUserAgentAccess=


/////////////////////////////////////////////////
// The specific Almonaster settings start here //
/////////////////////////////////////////////////

//
// Path for main database
//
DatabaseName=PageSources/Almonaster_Database

//
// Resource path
//
ResourceDirectory=WWW_Root/Almonaster/Resource

//
// Load database tables on demand, not at server startup
// If enabled, server startup will be faster and will consume
// less memory, but the integrity of the data in the database
// will not be verified (loading a table is a good data integrity test)
//
// 0 = No, load all tables at startup
// 1 = Yes, only load tables on demand
//
DelayTableLoads=1

//
// Check the logical integrity of the database file
// This will not verify actual table data, but it will
// make sure that the database structures themselves are
// consistent. The downside is a performance loss due to
// the need to scan the entire database file
// (Note: not implemented in 619)
//
// 0 = No, don't check the database on startup
// 1 = Yes, check the database on startup
//
CheckDatabaseOnStartup=1

//
// Maximum number of speakers in server chatroom
//
ChatroomMaxNumSpeakers=20

//
// Number of messages listed on chatroom page
//
ChatroomNumMessages=20

//
// Maximum number of characters for chatroom messages
//
ChatroomMaxMessageLength=192

//
// Timeout in seconds for chatroom speakers
//
ChatroomTimeOut=300

//
// Database autobackup flag
// 0 = The database will not be automatically backed up
// 1 = The database will be automatically backed up
//
AutoBackup=1

//
// Number of hours between automatic database backups
//
NumHoursBetweenBackups=24

//
// Number of days that backups should be left alive
// If AutoBackup is 1, backups older than this number of days
// will be automatically deleted when an automatic backup is performed
//
BackupLifeTime=7

//
// Number of nukes listed in nuke histories
//
NumNukesListed=15

//
// Add login successes and failures to the Almonaster pagesource report file
// 0 = no
// 1 = yes
//
ReportLoginEvents=1

//
// Make a note of all game endings in the Almonaster pagesource report file
// 0 = no
// 1 = yes
//
ReportGameEndings=1

//
// Make a note of all nukes in the Almonaster pagesource report file
// 0 = no
// 1 = yes
//
ReportNukes=1

//
// Hook library
// Only change this if you know what you're doing
//
//HookLibrary=pagesources/almonasterhook.dll
HookLibrary=

//
// Backup the database on system startup if AutoBackup=1
// 0 = no
// 1 = yes
//
BackupOnStartup=0

//
// Rebuild the Top Lists on system startup
// 0 = no
// 1 = yes
//
RebuildTopListsOnStartup=0